CREATE SCHEMA_CHANGE JOB add_supportai_schema {
    ADD VERTEX DocumentChunkEntrypoint(PRIMARY_ID id STRING, M_max UINT, M_max0 UINT, M UINT, m_l_normalize DOUBLE, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX EntityEntrypoint(PRIMARY_ID id STRING, M_max UINT, M_max0 UINT, M UINT, m_l_normalize DOUBLE, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX DocumentChunk(PRIMARY_ID id STRING, content STRING, embedding LIST<DOUBLE>, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX Document(PRIMARY_ID id STRING, embedding LIST<DOUBLE>, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX Concept(PRIMARY_ID id STRING, description STRING, embedding LIST<DOUBLE>, concept_type STRING, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX Entity(PRIMARY_ID id STRING, definition STRING, embedding LIST<DOUBLE>, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX Relationship(PRIMARY_ID id STRING, definition STRING, embedding LIST<DOUBLE>, short_name STRING, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX RelationshipEntrypoint(PRIMARY_ID id STRING, M_max UINT, M_max0 UINT, M UINT, m_l_normalize DOUBLE) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX ConceptEntrypoint(PRIMARY_ID id STRING, M_max UINT, M_max0 UINT, M UINT, m_l_normalize DOUBLE) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD VERTEX DocumentCollection(PRIMARY_ID id STRING, date_added DATETIME) WITH STATS="OUTDEGREE_BY_EDGETYPE", PRIMARY_ID_AS_ATTRIBUTE="true";
    ADD DIRECTED EDGE LINK_TO(FROM Concept, TO Concept|FROM Entity, TO Entity|FROM DocumentChunk, TO DocumentChunk|FROM Relationship, TO Relationship|FROM Document, TO Document, level_set SET<INT>) WITH REVERSE_EDGE="reverse_LINK_TO";
    ADD DIRECTED EDGE IS_CHILD_OF(FROM Concept, TO Concept) WITH REVERSE_EDGE="reverse_IS_CHILD_OF";
    ADD DIRECTED EDGE IS_HEAD_OF(FROM Entity, TO Relationship) WITH REVERSE_EDGE="reverse_IS_HEAD_OF";
    ADD DIRECTED EDGE HAS_TAIL(FROM Relationship, TO Entity) WITH REVERSE_EDGE="reverse_HAS_TAIL";
    ADD DIRECTED EDGE DESCRIBES_RELATIONSHIP(FROM Concept, TO Relationship) WITH REVERSE_EDGE="reverse_DESCRIBES_RELATIONSHIP";
    ADD DIRECTED EDGE DESCRIBES_ENTITY(FROM Concept, TO Entity) WITH REVERSE_EDGE="reverse_DESCRIBES_ENTITY";
    ADD DIRECTED EDGE CONTAINS_ENTITY(FROM DocumentChunk, TO Entity) WITH REVERSE_EDGE="reverse_CONTAINS_ENTITY";
    ADD DIRECTED EDGE MENTIONS_RELATIONSHIP(FROM DocumentChunk, TO Relationship) WITH REVERSE_EDGE="reverse_MENTIONS_RELATIONSHIP";
    ADD DIRECTED EDGE IS_AFTER(FROM DocumentChunk, TO DocumentChunk) WITH REVERSE_EDGE="reverse_IS_AFTER";
    ADD DIRECTED EDGE HAS_CHILD(FROM Document, TO DocumentChunk) WITH REVERSE_EDGE="reverse_HAS_CHILD";
    ADD DIRECTED EDGE ENTRYPOINT_DOCUMENTCHUNK(FROM DocumentChunkEntrypoint, TO DocumentChunk) WITH REVERSE_EDGE="reverse_ENTRYPOINT_DOCUMENTCHUNK";
    ADD DIRECTED EDGE ENTRYPOINT_ENTITY(FROM EntityEntrypoint, TO Entity) WITH REVERSE_EDGE="reverse_ENTRYPOINT_ENTITY";
    ADD DIRECTED EDGE ENTRYPOINT_RELATIONSHIP(FROM RelationshipEntrypoint, TO Relationship) WITH REVERSE_EDGE="reverse_ENTRYPOINT_RELATIONSHIP";
    ADD UNDIRECTED EDGE CONCEPT_SIMILAR_TO(FROM Concept, TO Concept, similarity_score DOUBLE);
    ADD DIRECTED EDGE ENTRPOINT_CONCEPT(FROM ConceptEntrypoint, TO Concept) WITH REVERSE_EDGE="reverse_ENTRPOINT_CONCEPT";
    ADD DIRECTED EDGE DOCUMENT_IN_COLLECTION(FROM DocumentCollection, TO Document) WITH REVERSE_EDGE="reverse_DOCUMENT_IN_COLLECTION";
}